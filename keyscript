#!/bin/bash

. /etc/cryptsetup/2fa/2fa.conf


target="$CRYPTTAB_NAME"
declare -n T="$target"
methods=",${T["methods"]},"
ykslot=${T["yubikey-challenge-ykslot"]}
ykpass=${T["yubikey-challenge-pass"]}
tpm2pin="${T["tpm2-keypair-pin"]}"
tmp2cached="${T["tpm2-keypair-cached"]}"
ykcached="${T["yubikey-challenge-cached"]}"

if [ -z "$cryptkeyscript" ]; then
	if [ -x /bin/plymouth ] && plymouth --ping; then
		cryptkeyscript="plymouth ask-for-password --prompt"
	else
		cryptkeyscript="/lib/cryptsetup/askpass"
	fi
fi

# When boot, if we create log in /run, they will be keeped after boot.
#            so, we put them in /var/cache. See man switch_root.
# When resume from cryptsetup-suspend, the /var is readonly, and
#            the contents of /run won't be keeped.
# Let's detect the case.
cachedir=/var/cache/cryptsetup/2fa
if ! mkdir -p ${cachedir} 2>/dev/null;then
	cachedir=/run/cryptsetup/2fa
	mkdir -p ${cachedir}
fi

_check_yubikey() {
	ykinfo -${ykslot} -q 2>/dev/null
}

_do_yubikey_challenge() {
	local pin=$1
	local P1=$(printf %s "$pin" | sha256sum | awk '{print $1}')
	local R="$(printf %s "$P1" | ykchalresp -"$ykslot" -x -i- 2>/dev/null || true)"
	length=`echo -n $R | wc -c`
	if [ $length -lt 40 ];then
		echo "Yubikey response fail" >&2
		return
	fi
	R="$(printf %s "$R" | xxd -r -p | base64 -w 0)"
	echo -n "$R"
}

yubikey_challenge() {
	mkdir -p ${cachedir}
	touch ${cachedir}/${target}.log
	touch ${cachedir}/log
	if [ -z "$(echo $methods | grep ',yubikey-challenge,')" ];then
		return
	fi
	local cached_ykpass=$(grep '^cached_ykpass=' ${cachedir}/log | cut -d= -f2-)
	if [ -n "${cached_ykpass}" ] && [ -z "$(grep 'cached_ykpass_used' ${cachedir}/${target}.log)" ];then
		echo cached_ykpass_used >> ${cachedir}/${target}.log
		echo -n "$cached_ykpass"
		exit 0
	fi
	if [ -z "${ykslot}" ];then
		echo "No ykslot is given. Skip yubikey." >&2
		return
	fi
	if [ -z "$(_check_yubikey)" ];then
		echo "No yubikey is present. Skip yubikey." >&2
		return
	fi
	if [ -n "${ykpass}" ] && [ -z "$(grep 'ykpass_used' ${cachedir}/${target}.log)" ];then
		local R=$(_do_yubikey_challenge ${ykpass})
		if [ -z "$R" ];then
			return
		fi
		echo ykpass_used >> ${cachedir}/${target}.log
		echo -n "$R"
		[ "$ykcached" = "1" ] && echo "cached_ykpass=$R" > ${cachedir}/log
		exit 0
	fi
	if [ -z "$(grep 'yubikey_used' ${cachedir}/${target}.log)" ];then
		local pin="$($cryptkeyscript "Please enter a yubikey challenge password for $target")"
		local R=$(_do_yubikey_challenge ${pin})
		if [ -z "$R" ];then
			return
		fi
		echo yubikey_used >> ${cachedir}/${target}.log
		echo -n "$R"
		[ "$ykcached" = "1" ] && echo "cached_ykpass=$R" >> ${cachedir}/log
		exit 0
	fi
}

tpm2_keypair() {
	mkdir -p ${cachedir}
	touch ${cachedir}/${target}.log
	touch ${cachedir}/log
	if [ -z "$(echo $methods | grep ',tpm2-keypair,')" ];then
		return
	fi
	local cached_tmp2pass=$(grep '^cached_tpm2pass=' ${cachedir}/log | cut -d= -f2-)
	if [ -n "${cached_tmp2pass}" ] && [ -z "$(grep 'cached_tmp2pass_used' ${cachedir}/${target}.log)" ];then
		echo cached_tpm2pass_used >> ${cachedir}/${target}.log
		echo -n "$cached_tpm2pass"
		exit 0
	fi
	if [ -n "$(grep 'tpm2_keypair_used' ${cachedir}/${target}.log)" ];then
		return
	fi
	if ! tpm2_selftest;then
		echo "tpm2_selftest fail" >&2
		return
	fi
	if [ ! -e /etc/cryptsetup/2fa/key.pub ] || [ ! -e /etc/cryptsetup/2fa/key.priv ] || [ ! -e /etc/cryptsetup/2fa/${target}.enc ];then
		echo "Cannot find tpm2 key files" >&2
		return
	fi
	local pin=$tpm2pin
	if [ -z "$pin" ];then
		pin=$(${cryptkeyscript} "Please input the PIN for TPM2 keypair for $target")
	fi
	pin=`echo $pin | sha256sum | cut -b 1-16`
	echo -n $pin > ${cachedir}/${target}.hpinx
	rm -f ${cachedir}/primary.ctx ${cachedir}/key.ctx
	tpm2_createprimary -c ${cachedir}/primary.ctx >> ${cachedir}/${target}.log
	tpm2_load -C ${cachedir}/primary.ctx -u /etc/cryptsetup/2fa/key.pub -r /etc/cryptsetup/2fa/key.priv -c ${cachedir}/key.ctx >> ${cachedir}/${target}.log
	tpm2_encryptdecrypt -d -c ${cachedir}/key.ctx --iv=${cachedir}/${target}.hpinx -o ${cachedir}/${target}.dec /etc/cryptsetup/2fa/${target}.enc
	local dec=$(cat ${cachedir}/${target}.dec 2>/dev/null)
	rm -f ${cachedir}/primary.ctx ${cachedir}/key.ctx
	if [ -z "$dec" ];then
		return
	fi
	local R=$(cat ${cachedir}/${target}.dec)
	rm -f ${cachedir}/${target}.hpinx ${cachedir}/${target}.dec
	[ "$tmp2cached" = "1" ] && echo "cached_tmp2pass=$R" >> ${cachedir}/log
	echo -n $R
	echo tpm2_keypair_used >> ${cachedir}/${target}.log
	exit 0
}

yubikey_challenge
tpm2_keypair

echo "Fallback to normal password" >&2
$cryptkeyscript "Please enter a normal password for cryptsetup for $target"
